name: Build & Deploy Flappy Capy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GAME_DIR: .         # change if main.py is in a subfolder
      MAIN_FILE: main.py  # change if your entry file has a different name
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pygbag
        run: |
          python -m pip install --upgrade pip
          pip install pygbag

      - name: Build with pygbag (WASM bundle)
        run: |
          cd "$GAME_DIR"
          python -m pygbag --build "$MAIN_FILE"
          echo "--- build dir ---"; ls -la build || true
          echo "--- build/web ---"; ls -la build/web || (echo "ERROR: build/web missing" && exit 1)

      - name: Copy static assets into build (images/audio/fonts)
        run: |
          cd "$GAME_DIR"
          rsync -av --ignore-existing \
            --include="*/" \
            --include="*.png" --include="*.jpg" --include="*.jpeg" --include="*.gif" \
            --include="*.mp3" --include="*.m4a" --include="*.ogg" --include="*.wav" \
            --include="*.ttf" --include="*.otf" --include="*.json" --include="*.txt" \
            --exclude="*" . build/web/

      - name: Prepare site folder
        run: |
          mkdir -p site/game
          cp -r "$GAME_DIR/build/web/"* site/game/
          # simple redirect landing page to /game/
          cat > site/index.html <<'HTML'
          <!doctype html><meta charset="utf-8">
          <meta http-equiv="refresh" content="0; url=game/">
          <title>Flappy Capy</title>
          <a href="game/">Click here if you are not redirectedâ€¦</a>
          HTML

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
