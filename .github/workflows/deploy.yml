name: Build & Deploy Flappy Capy

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pygbag (latest from GitHub)
        run: |
          python -m pip install --upgrade pip
          python -m pip install "git+https://github.com/pygame-web/pygbag.git"

      - name: Set up Emscripten (emsdk)
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest

      - name: Create pygbag.ini (force web build)
        run: |
          printf "%s\n" \
          "[project]" \
          "name = capi" \
          "source = ." \
          "entry = main.py" \
          "backend = pygame" \
          "platform = web" \
          "" \
          "[DEPENDENCIES]" \
          "ignorefiles =" \
          "ignoredirs  =" > pygbag.ini

      - name: Ensure build dir exists
        run: mkdir -p build/web

      - name: Build with pygbag (timeout + wait for files)
        run: |
          set -e
          python -m pygbag main.py & PID=$!
          for i in $(seq 1 90); do
            if [ -f build/web/index.html ] && ls build/web/*.wasm >/dev/null 2>&1; then
              echo "✅ Web build detected."
              break
            fi
            echo "⏳ Waiting for build... ($i/90)"
            sleep 2
          done
          kill $PID || true
          ls -la build/web

      # Optional: hide pygbag corner/overlay & auto-start inside the game
      - name: Patch game HTML (autostart + hide corner)
        run: |
          python - <<'PY'
          import os, io
          p = "build/web/index.html"
          if os.path.isfile(p):
              patch = """
          <style>
            /* hide common top-right overlays/badges that pygbag/emscripten templates add */
            #github-corner, .corner, .top-right, .badge, .toolbar, a[href*="github.com"]{
              display:none !important; visibility:hidden !important;
            }
          </style>
          <script>
          window.addEventListener("load", () => {
            const clickRun = () => {
              const btn = document.getElementById("run") || document.querySelector(".run, #start, .start, button");
              try { if (btn) btn.click(); } catch(e){}
            };
            clickRun(); setTimeout(clickRun,150); setTimeout(clickRun,300);
          });
          </script>
              """
              with io.open(p, "a", encoding="utf-8") as f:
                  f.write("\\n"+patch+"\\n")
              print("Patched:", p)
          else:
              print("Skipping patch; file not found:", p)
          PY

      # Prepare a site/ folder with wrapper at root and game under /game
      - name: Prepare site folder
        run: |
          mkdir -p site/game
          cp -r build/web/* site/game/
          # Ensure wrapper uses /game/index.html
          sed -i 's|build/web/index.html|game/index.html|g' index.html || true
          cp index.html site/index.html

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
